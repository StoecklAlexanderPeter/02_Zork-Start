package ch.bbw.zork;/** * Author:  Michael Kolling, Version: 1.1, Date: August 2000 * refactoring: Rinaldo Lanza, September 2020 */import java.lang.reflect.Array;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.stream.Collectors;public class Room {		private String description;	private HashMap<String, Room> exits;	private boolean won;	private ArrayList<Item> items;	public Room(String description) {		this.description = description;		this.exits = new HashMap<>();		this.won = false;		this.items = new ArrayList<Item>();	}	public void setExits(Room north, Room east, Room south, Room west) {		exits.put("north", north);		exits.put("east", east);		exits.put("south", south);		exits.put("west", west);	}	public void addItem(Item item) {		this.items.add(item);	}	public void setWon(boolean won) {		this.won = won;	}	public boolean getWon() { return this.won; }	public String shortDescription() {		return description;	}	public String longDescription() {		StringBuilder stringBuilder = new StringBuilder("You are in " + description + ".\n");		stringBuilder.append(exitString());		return stringBuilder.toString();	}	private String exitString() {		return "Exits:" + String.join(" ", exits.keySet());	}	public Room nextRoom(String direction) {		return exits.get(direction);	}	public void showItems() {		for (int i = 0; i < this.items.size(); i ++) {			System.out.println("\t" + i + ": " + this.items.get(i).getName() + ", " + this.items.get(i).getWeight());		}	}	public Item takeItem(int index) {		Item item = this.items.get(index);		this.items.remove(index);		return item;	}}